name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_URL: artemek47/smartsforall
  DOCKER_TAG: latest
  DEPLOYMENT_NAME: smartsforall
  DEPLOYMENT_VALUES_PATH: smartsforall/charts/values-dev.yaml
  
  
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo ${{ github.workspace }}

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test
          
      - name: Docker Login
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKER_URL }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ${{ github.workspace }}/${{ env.DEPLOYMENT_NAME }}/src/
          file: ${{ github.workspace }}/${{ env.DEPLOYMENT_NAME }}/src/Dockerfile
          push: true
          tags: ${{ env.DOCKER_URL }}:${{ github.run_id }},${{ env.DOCKER_URL }}:${{ env.DOCKER_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
    
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Kubeconfig
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "${KUBECONFIG}" > ~/.kube/config

      # - name: pull kubeconfig
      #   run: |
      #     mkdir kubeconf
      #     echo "${{ secrets.KUBE_CONFIG }}" > kubeconf/kubeconf.conf
      
      # - name: Install kubectl
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y kubectl

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
  
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Uninstall Previous Deployment
        run: helm uninstall ${{ env.DEPLOYMENT_NAME }}

      - name: Install Deployment
        if: always()
        run: helm upgrade --namespace dev --install --values ${{ env.DEPLOYMENT_VALUES_PATH }} ${{ env.DEPLOYMENT_NAME }} ${{ env.DEPLOYMENT_NAME }}/charts


      
